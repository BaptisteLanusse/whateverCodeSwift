[
 {
  "file": "/Users/lanussebaptiste/Desktop/Grimm-Starter/Grimm/StoryListController.swift",
  "offset": 1690,
  "remove": 2951,
  "text": "! StoryViewController\n      storyViewController.story = sender as? Story;\n    }\n  }\n  \n  override func viewDidLoad() {\n    super.viewDidLoad()\n    \n    let image = UIImage(named: \"Bull\")\n    let imageView = UIImageView(image: image)\n    navigationItem.titleView = imageView\n    reloadTheme()\n    \n    let activityView = UIActivityIndicatorView(activityIndicatorStyle: .Gray)\n    activityView.hidesWhenStopped = true\n    let containerItem = UIBarButtonItem(customView: activityView)\n    navigationItem.rightBarButtonItem = containerItem\n    \n    tableView.registerClass(StoryCell.self, forCellReuseIdentifier: \"StoryCell\")\n    tableView.rowHeight = UITableViewAutomaticDimension\n    tableView.estimatedRowHeight = 78\n    tableView.tableFooterView = UIView()\n    \n    activityView.startAnimating()\n    Story.loadStories() { loadedStories, error in\n      if let stories = loadedStories {\n        self.stories = stories\n        var indexPaths = [NSIndexPath]()\n        \n        for var row = 0; row < stories.count; row++ {\n          let indexPath = NSIndexPath(forRow: row, inSection: 0)\n          indexPaths.append(indexPath)\n        }\n        \n        self.tableView.beginUpdates()\n        self.tableView.insertRowsAtIndexPaths(indexPaths, withRowAnimation: .Automatic)\n        self.tableView.endUpdates()\n      }\n      activityView.stopAnimating()\n    }\n  }\n  \n  func preferredContentSizeCategoryDidChange(notification: NSNotification!) {\n    tableView.reloadData()\n  }\n  \n  private func registerForNotifications() {\n    let notificationCenter = NSNotificationCenter.defaultCenter()\n    notificationCenter.addObserver(self, selector: Selector(\"preferredContentSizeCategoryDidChange:\"),\n      name: UIContentSizeCategoryDidChangeNotification, object: nil)\n    notificationCenter.addObserver(self, selector: Selector(\"themeDidChange:\"),\n      name: ThemeDidChangeNotification, object: nil)\n  }\n  \n  func themeDidChange(notification: NSNotification!) {\n    reloadTheme()\n  }\n  \n  override func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n    return 1\n  }\n  \n  override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int  {\n    return stories.count\n  }\n  \n  override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell  {\n    let storyCell = tableView.dequeueReusableCellWithIdentifier(\"StoryCell\") as! StoryCell\n    storyCell.story = stories[indexPath.row]\n    return storyCell\n  }\n  \n  override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath)  {\n    tableView.deselectRowAtIndexPath(indexPath, animated: true)\n    let story = stories[indexPath.row]\n    performSegueWithIdentifier(StoryListToStoryViewSegueIdentifier, sender: story)\n  }\n  \n  func reloadTheme() {\n    let theme = Theme.sharedInstance\n    tableView.separatorColor = theme.separatorColor\n    \n    if let indexPaths = tableView.indexPathsForVisibleRows",
 }
]
