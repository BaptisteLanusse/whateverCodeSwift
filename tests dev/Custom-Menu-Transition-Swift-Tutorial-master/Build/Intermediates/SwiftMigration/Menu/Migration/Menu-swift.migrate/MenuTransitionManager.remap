[
 {
  "file": "/Users/lanussebaptiste/Desktop/Custom-Menu-Transition-Swift-Tutorial-master/Menu/MenuTransitionManager.swift",
  "offset": 1329,
  "remove": 4484,
  "text": "! MenuViewController : screens.to as! MenuViewController\n        let bottomViewController = !self.presenting ? screens.to as UIViewController : screens.from as UIViewController\n        \n        let menuView = menuViewController.view\n        let bottomView = bottomViewController.view\n        \n        // prepare menu items to slide in\n        if (self.presenting){\n            self.offStageMenuController(menuViewController)\n        }\n        \n        // add the both views to our view controller\n        container.addSubview(bottomView)\n        container.addSubview(menuView)\n        \n        let duration = self.transitionDuration(transitionContext)\n        \n        // perform the animation!\n        UIView.animateWithDuration(duration, delay: 0.0, usingSpringWithDamping: 0.7, initialSpringVelocity: 0.8, options: [], animations: {\n            \n                if (self.presenting){\n                    self.onStageMenuController(menuViewController) // onstage items: slide in\n                }\n                else {\n                    self.offStageMenuController(menuViewController) // offstage items: slide out\n                }\n\n            }, completion: { finished in\n                \n                // tell our transitionContext object that we've finished animating\n                transitionContext.completeTransition(true)\n                \n                // bug: we have to manually add our 'to view' back http://openradar.appspot.com/radar?id=5320103646199808\n                UIApplication.sharedApplication().keyWindow.addSubview(screens.to.view)\n                \n        })\n        \n    }\n    \n    func offStage(amount: CGFloat) -> CGAffineTransform {\n        return CGAffineTransformMakeTranslation(amount, 0)\n    }\n    \n    func offStageMenuController(menuViewController: MenuViewController){\n        \n        menuViewController.view.alpha = 0\n        \n        // setup paramaters for 2D transitions for animations\n        let topRowOffset  :CGFloat = 300\n        let middleRowOffset :CGFloat = 150\n        let bottomRowOffset  :CGFloat = 50\n        \n        menuViewController.textPostIcon.transform = self.offStage(-topRowOffset)\n        menuViewController.textPostLabel.transform = self.offStage(-topRowOffset)\n        \n        menuViewController.quotePostIcon.transform = self.offStage(-middleRowOffset)\n        menuViewController.quotePostLabel.transform = self.offStage(-middleRowOffset)\n        \n        menuViewController.chatPostIcon.transform = self.offStage(-bottomRowOffset)\n        menuViewController.chatPostLabel.transform = self.offStage(-bottomRowOffset)\n        \n        menuViewController.photoPostIcon.transform = self.offStage(topRowOffset)\n        menuViewController.photoPostLabel.transform = self.offStage(topRowOffset)\n        \n        menuViewController.linkPostIcon.transform = self.offStage(middleRowOffset)\n        menuViewController.linkPostLabel.transform = self.offStage(middleRowOffset)\n        \n        menuViewController.audioPostIcon.transform = self.offStage(bottomRowOffset)\n        menuViewController.audioPostLabel.transform = self.offStage(bottomRowOffset)\n        \n        \n        \n    }\n    \n    func onStageMenuController(menuViewController: MenuViewController){\n        \n        // prepare menu to fade in\n        menuViewController.view.alpha = 1\n        \n        menuViewController.textPostIcon.transform = CGAffineTransformIdentity\n        menuViewController.textPostLabel.transform = CGAffineTransformIdentity\n        \n        menuViewController.quotePostIcon.transform = CGAffineTransformIdentity\n        menuViewController.quotePostLabel.transform = CGAffineTransformIdentity\n        \n        menuViewController.chatPostIcon.transform = CGAffineTransformIdentity\n        menuViewController.chatPostLabel.transform = CGAffineTransformIdentity\n        \n        menuViewController.photoPostIcon.transform = CGAffineTransformIdentity\n        menuViewController.photoPostLabel.transform = CGAffineTransformIdentity\n        \n        menuViewController.linkPostIcon.transform = CGAffineTransformIdentity\n        menuViewController.linkPostLabel.transform = CGAffineTransformIdentity\n        \n        menuViewController.audioPostIcon.transform = CGAffineTransformIdentity\n        menuViewController.audioPostLabel.transform = CGAffineTransformIdentity\n        \n    }\n    \n    // return how many seconds the transiton animation will take\n    func transitionDuration(transitionContext: UIViewControllerContextTransitioning?",
 }
]
